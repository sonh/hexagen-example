// Code generated by "hexagen User ."; DO NOT EDIT.

package entity

import (
	"backend/internal/usermgmt/modules/user/core/entity"
	"backend/internal/usermgmt/pkg/field"
	"fmt"
)

type ValidUser struct {
	RandomID string
}

// This statement will fail to compile if *User ever stops matching the interface.
var _ entity.User = (*ValidUser)(nil)

func (user ValidUser) UserID() field.String {
	return field.NewString(user.RandomID)
}
func (user ValidUser) Email() field.String {
	return field.NewString(fmt.Sprintf("email+%s@example.com", user.RandomID))
}

// UserHasEmptyUserID keeps all valid attributes but override with an invalid UserID
type UserHasEmptyUserID struct {
	ValidUser
}

var _ entity.User = (*UserHasEmptyUserID)(nil)

func (user UserHasEmptyUserID) UserID() field.String {
	return field.NewString("")
}

// UserHasEmptyEmail keeps all valid attributes but override with an invalid Email
type UserHasEmptyEmail struct {
	ValidUser
}

var _ entity.User = (*UserHasEmptyEmail)(nil)

func (user UserHasEmptyEmail) Email() field.String {
	return field.NewString("")
}
